class Pair implements Comparable <Pair>{
    int wt;
    int v;
    public Pair(int v, int wt){
        this.v= v;
        this.wt=wt;
    }
    public int compareTo(Pair that){
        return this.wt-that.wt;
    }
}

class Solution
{
    //Function to find sum of weights of edges of the Minimum Spanning Tree.
    static int spanningTree(int V, ArrayList<ArrayList<ArrayList<Integer>>> adj) 
    {
        // Add your code here
        boolean vis[] = new boolean[V];
        PriorityQueue<Pair> q= new PriorityQueue<>();
        q.add(new Pair(0,0));
        int ans=0;
        while(q.size()!=0){
            Pair cur=q.remove();
            int u=cur.v;
            if(vis[u]){
                continue;
            }
            ans=ans+cur.wt;
            vis[u]=true;
            ArrayList<ArrayList<Integer>> neighbour=adj.get(u);
            for(ArrayList<Integer> list: neighbour){
                int vertex=list.get(0);
                int weight=list.get(1);
                if(vis[vertex]==false){
                    q.add(new Pair(vertex,weight));
                }
            }
        }
        return ans;
    }
}
